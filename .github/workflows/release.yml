name: Flutter CI

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v1

      - name: Set up Java
        uses: actions/setup-java@v1
        with:
          java-version: '12.x'

      - name: Set up Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: 'beta'

      - name: Get dependencies
        run: flutter pub get

      - name: Format code
        run: dart format --set-exit-if-changed .

      - name: Analyze code
        run: flutter analyze .

      - name: Build APK
        run: flutter build apk

      - name: Upload APK artifact
        uses: actions/upload-artifact@v1
        with:
          name: release-apk
          path: build/app/outputs/apk/release/app-release.apk

      - name: Create GitHub release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            This is an automatically generated release.
          draft: false
          prerelease: false

      - name: Upload release artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/app/outputs/apk/release/app-release.apk
          asset_name: langdida.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Build Windows Form app
        run: flutter build windows

      - name: Upload Windows Form artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/windows/runner/Release/MyApp.exe
          asset_name: LangDiDa.exe
          asset_content_type: application/octet-stream

      - name: Build Web app
        run: flutter build web

      - name: Upload Web artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/web/
          asset_name: LangDiDa.zip
          asset_content_type: application/zip
